:import {
  -st-from: "../Text/Text.st.css";
  -st-default: Text;
};

:import {
  -st-from: "../Sidebar/colors.st.css";
  -st-named:
    sidebarBackgroundColor, hoveredBackgroundColor, selectedBackgroundColor, disabledBackgroundColor, textColor,
    sidebarLightBackgroundColor, lightTextColor, selectedLightBackgroundColor, hoveredLightBackgroundColor, hoveredLightTextColor, disabledLightBackgroundColor
}

:import {
    -st-from: "../Foundation/stylable/colors.st.css";
    -st-named: D80, B30, B10
}

:import {
  -st-from: "wix-ui-core/dist/src/hocs/Focusable/Focusable.st.css";
  -st-default: Focusable;
  -st-named: focus-box;
}

:vars {
  paddingWithoutSuffix: 6px 24px 6px 24px;
  paddingWithSuffix: 6px 18px 6px 24px;
  chevronPartialOpacity: 0.3;
}

.root {
  -st-extends: Focusable;
  -st-states: selected, disabled, prefix, suffix, drillable, alwaysDisplayChevron, skin(enum(dark, light));

  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: value(paddingWithoutSuffix);
  max-width: 228px;
  min-height: 36px;
  box-sizing: border-box;
  color: value(D80);
}

/* Basic */

.root:skin(dark) {
  background-color: value(sidebarBackgroundColor);
  color: value(textColor);
}

.root:skin(light) {
  background-color: value(sidebarLightBackgroundColor);
  color: value(lightTextColor);
}

/* Selected */

.root:selected {
  background-color: value(selectedBackgroundColor)
}

.root:selected .text:size(small) {
  color: value(B10);
}

.root:skin(light):selected {
  background-color: value(selectedLightBackgroundColor)
}

/* Hovered */

.root:hover, .root:hover:selected:not(:disabled) {
  background-color: value(hoveredBackgroundColor);
  cursor: pointer;
}

.root:hover:not(:disabled) .text:size(small), .root:hover:selected:not(:disabled) .text:size(small) {
  color: value(B30);
}

.root:skin(light):hover, .root:skin(light):hover:selected:not(:disabled) {
  background-color: value(hoveredLightBackgroundColor);
}

.root:skin(light):hover:not(:disabled) .text:size(small), .root:skin(light):hover:selected:not(:disabled) .text:size(small) {
  color: value(hoveredLightTextColor);
}

/* Disabled */

.root:disabled {
  background-color: value(disabledBackgroundColor);
  cursor: default;
}


.root:skin(light):disabled {
  background-color: value(disabledLightBackgroundColor);
}

/* Others */

.root:focus {
  -st-mixin: focus-box;
}
.root:drillable {
  padding-right: 42px;
}

.root:drillable:hover, .root:drillable:alwaysDisplayChevron {
  padding: value(paddingWithSuffix);
}

.root:drillable .chevron {
  position: absolute;
  opacity: 0;
}
.root:drillable:alwaysDisplayChevron .chevron {
  position: static;
  opacity: value(chevronPartialOpacity);
}

.root:drillable:hover .chevron {
  position: static;
  opacity: 1;
  transition: all .5s;
  color: value(B30);
}

.root:prefix:hover:not(:suffix) {
  padding: value(paddingWithoutSuffix);
}

.root:suffix, .root:prefix:drillable:hover {
  padding: value(paddingWithSuffix);
  min-width: 24px;
}

.prefix {
  margin-right: 10px;
}

.text {
  -st-extends: Text;

  display: block;
  flex-grow: 1;
  word-break: break-word;
}
